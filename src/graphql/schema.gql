# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CostTracking {
  amount: Float!
  category: String!
  date: DateTime!
  financialId: String!
  id: ID!
  projectId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Financial {
  budget: Float!
  costTracking: [CostTracking!]
  expenditure: Float!
  id: ID!
  invoices: [Invoice!]
  projectId: String!
}

type FinancialSummary {
  budgetUtilization: Float!
  invoiceCollection: Float!
  totalBudget: Float!
  totalCosts: Float!
  totalExpenditure: Float!
  totalInvoiced: Float!
}

type Invoice {
  amount: Float!
  date: DateTime!
  financialId: String!
  id: ID!
  invoiceNumber: String!
  projectId: String!
  status: InvoiceStatus!
}

"""The status of an invoice"""
enum InvoiceStatus {
  OVERDUE
  PAID
  PENDING
}

type Mutation {
  addCostTracking(amount: Float!, category: String!, date: DateTime!, financialId: String!, projectId: String!): CostTracking!
  addInvoice(amount: Float!, date: DateTime!, financialId: String!, invoiceNumber: String!, projectId: String!, status: InvoiceStatus!): Invoice!
  createFinancial(budget: Float!, expenditure: Float!, projectId: String!): Financial!
  createProject(description: String!, endDate: DateTime!, location: String!, name: String!, startDate: DateTime!, status: ProjectStatus!): Project!
  updateFinancial(budget: Float, expenditure: Float, id: String!): Financial!
  updateProjectStatus(id: String!, status: ProjectStatus!): Project!
}

type Project {
  createdAt: DateTime!
  description: String
  endDate: DateTime
  id: ID!
  location: String!
  name: String!
  startDate: DateTime!
  status: ProjectStatus!
}

"""The status of a project"""
enum ProjectStatus {
  COMPLETED
  IN_PROGRESS
  ON_HOLD
  PLANNING
}

type Query {
  allProjectFinancials: [Financial!]!
  financialSummary(projectId: String!): FinancialSummary!
  project(id: String!): Project!
  projectFinancials(projectId: String!): [Financial!]!
  projects: [Project!]!
}